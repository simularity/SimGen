/*
    Example that generates 50:50 mix of type a and b,
    type b steadily increase after start, and both move with p and t
*/
% the root node
root ~?  % a probabilistic selector
 type_a,
 type_b.

/*
   An action node.
   Everything up to the ; is done on tick 1,
   everythign after on each subsequent tick
*/
type_a !
 p = 100,    /* used = because we don't have a previous tick */
 t = 100
;
 p := levy_flight(p, 0, 200),
 t := wander(t, 0, 200, 3),
 speed = 500 - p - t
;
 p > 20,
 t > 20,
 p < 180,
 t < 180,
 clock() < 25.

type_b !
 p = 100,
 t = 100
;
 p := levy_flight(p, 0, 200),   % end of line comment
 t := wander(t, 0, 200, /* stuff in here */  3),
 speed = 500 + clock() - p - t
;
 p > 80,
 t > 80,
 p < 120,
 t < 120,
 clock() < 25.

/*
    Test of everything implemented so far
*/

testall ->
  try_test_op_priority,
  try_test_immediate_fail_pdq,
  try_test_levy_flight,
  try_test_wander,
  try_test_subtract_negate,
  try_test_boundary,
  try_test_all_operators,
  try_test_various_assignment.

try_test_op_priority try test_op_priority.
test_op_priority !
  x = 0
;
  x := x + 2 + 2 * 3
;
  x < 50.

% we don't fail on first tick
try_test_immediate_fail_pdq try test_immediate_fail_pdq.
test_immediate_fail_pdq !
  xa = 10
;
  xa := xa + 1
;
  xa < 5
.

try_test_levy_flight try test_levy_flight.
test_levy_flight !
 xb = 0
;
 xb := levy_flight(xb, -100, 100)
;
 xb > -80,
 xb < 80
.

try_test_wander try test_wander.
test_wander !
xb = 0
;
 xb := wander(xb, -100, 100, 5)
;
 xb > -80,
 xb < 80
.

try_test_subtract_negate try test_subtract_negate.
test_subtract_negate !
 y = 0
;
 y := y - -3
;
 y < -6,
 y > 9
.

try_test_boundary try test_boundary.
test_boundary !
;
 y := y + 20.3
;
 y < 30.7
.

try_test_all_operators try test_all_operators.
test_all_operators !
 z = 1 + 2,
 w = 1 * 2,
 x = 1 - 2,
 yy = 1 / 2,
 t = 0
;
 x := 1 + (1/x),
 t := t + 1
;
 x < 5,
 x > -5,
 t > 12
.

try_test_various_assignment try test_various_assignment.
test_various_assignment !
 z := z + 10,
 x = 5,
 y = clock()
;
 z := z - 1,
 x = z
;
 x < 5
.

